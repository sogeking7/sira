generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

model User {
  id        String    @id @default(cuid())
  phone     String?
  attempts  Attempt[]
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
}

model Questionnaire {
  id        Int        @id @default(autoincrement())
  title     String
  questions Question[]
  attempts  Attempt[]
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
}

model Question {
  id              Int            @id @default(autoincrement())
  title           String
  imageUrl        String
  answers         Answer[]
  questionnaire   Questionnaire? @relation(fields: [questionnaireId], references: [id])
  questionnaireId Int?
}

model Answer {
  id         Int                @id @default(autoincrement())
  title      String
  isCorrect  Boolean            @default(false)
  question   Question?          @relation(fields: [questionId], references: [id])
  questionId Int?
  attempts   AttemptOnAnswers[]
}

model Attempt {
  id              Int                @id @default(autoincrement())
  user            User?              @relation(fields: [userId], references: [id])
  userId          String?
  selectedAnswers AttemptOnAnswers[]
  questionnaire   Questionnaire?     @relation(fields: [questionnaireId], references: [id])
  questionnaireId Int?
}

model AttemptOnAnswers {
  id        Int      @id @default(autoincrement())
  attempt   Attempt? @relation(fields: [attemptId], references: [id])
  attemptId Int?
  answer    Answer?  @relation(fields: [answerId], references: [id])
  answerId  Int?
  
  createdAt DateTime @default(now()) @map("created_at")
}
